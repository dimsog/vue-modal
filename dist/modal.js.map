{"version":3,"file":"modal.js","sources":["../src/utils/ModalStorage.ts","../src/utils/modal-resize-type.ts","../src/utils/modal-cursor.ts","../src/utils/modal-utils.ts","../src/events/resizeModal.ts","../src/events/moveModal.ts","../src/utils/updateModalSizeAndPosition.ts","../src/Components/ModalBackdrop.vue","../src/Components/ModalCloseButton.vue","../src/Components/Modal.vue","../src/Components/ModalFooter.vue","../src/Components/ModalContent.vue","../src/Components/ModalButton.vue","../src/modal.ts"],"sourcesContent":["import {ModalOptions} from \"../Types/ModalOptions\";\r\n\r\nconst modals = new Map<string, ModalOptions>();\r\n\r\nconst addModal = (name: string, options: ModalOptions): void => {\r\n    modals.set(name, options);\r\n}\r\n\r\nconst getModal = (name: string): ModalOptions | null => {\r\n    const options = modals.get(name);\r\n    if (options === undefined) {\r\n        return null;\r\n    }\r\n    return options;\r\n}\r\n\r\nconst deleteModal = (name: string): void => {\r\n    modals.delete(name);\r\n}\r\n\r\nconst getModals = (): Map<string, ModalOptions> => {\r\n    return modals;\r\n}\r\n\r\nexport {\r\n    getModals,\r\n    addModal,\r\n    getModal,\r\n    deleteModal\r\n};\r\n","export default (mouseX: number, mouseY: number, rect: DOMRect): string | null => {\r\n    if (mouseX - rect.left > -10 && mouseX - rect.left < 10 && mouseY - rect.top > -10 && mouseY - rect.top < 10) {\r\n        return 'top-left';\r\n    }\r\n    if (rect.right - mouseX > -10 && rect.right - mouseX < 10 && mouseY - rect.top > -10 && mouseY - rect.top < 10) {\r\n        return 'top-right';\r\n    }\r\n    if (rect.bottom - mouseY > -10 && rect.bottom - mouseY < 10 && mouseX - rect.left > -10 && mouseX - rect.left < 10) {\r\n        return 'bottom-left';\r\n    }\r\n    if (rect.bottom - mouseY > -10 && rect.bottom - mouseY < 10 && rect.right - mouseX > -10 && rect.right - mouseX < 10) {\r\n        return 'bottom-right';\r\n    }\r\n    if (mouseX - rect.left > -5 && mouseX - rect.left < 5) {\r\n        return 'left';\r\n    }\r\n    if (rect.right - mouseX > -5 && rect.right - mouseX < 5) {\r\n        return 'right';\r\n    }\r\n    if (mouseY - rect.top > -5 && mouseY - rect.top < 5) {\r\n        return 'top';\r\n    }\r\n    if (rect.bottom - mouseY > -5 && rect.bottom - mouseY < 5) {\r\n        return 'bottom';\r\n    }\r\n    return null;\r\n}","import modalResizeType from \"./modal-resize-type\";\r\n\r\nexport default (mouseX: number, mouseY: number, rect: DOMRect): string => {\r\n    switch (modalResizeType(mouseX, mouseY, rect)) {\r\n        case 'left':\r\n        case 'right':\r\n            return 'col-resize';\r\n        case 'top':\r\n        case 'bottom':\r\n            return 'row-resize';\r\n        case 'top-left':\r\n        case 'bottom-right':\r\n            return 'nwse-resize';\r\n        case 'top-right':\r\n        case 'bottom-left':\r\n            return 'nesw-resize';\r\n        default:\r\n            return '';\r\n    }\r\n}","import { ModalPosition } from \"../Types/ModalPosition\";\r\nimport { getModals } from \"./ModalStorage\";\r\n\r\nconst calculateX = (width: number): number => {\r\n    return Math.round(document.documentElement.clientWidth / 2 - width / 2);\r\n}\r\n\r\nconst calculateY = (height: number): number => {\r\n    let y = Math.round(window.innerHeight / 2 - height / 2);\r\n    if (y < 0) {\r\n        y = 5;\r\n    }\r\n    return y;\r\n}\r\n\r\nconst normalizeSizeFromProps = (size: string): number => {\r\n    return Number(size.replace('px', ''));\r\n}\r\n\r\nconst getStartupModalPosition = (width: number, height: number): ModalPosition => {\r\n    return {\r\n        x: calculateX(width),\r\n        y: calculateY(height),\r\n        width: width,\r\n        height: height,\r\n    }\r\n}\r\n\r\nconst getMaxZIndexOfModals = (): number => {\r\n    let zIndex = 1000;\r\n    for (const modalOption of getModals().values()) {\r\n        const zIndexOfCurrentModal = modalOption.getZIndex();\r\n        if (zIndexOfCurrentModal > zIndex) {\r\n            zIndex = zIndexOfCurrentModal;\r\n        }\r\n    }\r\n    return zIndex;\r\n}\r\n\r\nconst getScrollbarWidth = (): number => {\r\n    return window.innerWidth - document.documentElement.clientWidth;\r\n}\r\n\r\nexport {\r\n    normalizeSizeFromProps,\r\n    getStartupModalPosition,\r\n    getMaxZIndexOfModals,\r\n    getScrollbarWidth,\r\n}\r\n","import modalCursor from \"../utils/modal-cursor\";\r\nimport modalResizeType from \"../utils/modal-resize-type\";\r\nimport { ResizeModalOptions } from \"../Types/ResizeModalOptions\";\r\nimport {normalizeSizeFromProps} from \"../utils/modal-utils\";\r\n\r\nexport default ($modal: HTMLElement, options: ResizeModalOptions) => {\r\n    $modal.addEventListener('pointermove', (e) => {\r\n        const rect = $modal.getBoundingClientRect();\r\n        $modal.style.cursor = modalCursor(e.clientX, e.clientY, rect);\r\n    });\r\n\r\n    $modal.addEventListener('pointerdown', (e) => {\r\n        const x = e.clientX;\r\n        const y = e.clientY;\r\n        const originalRect = $modal.getBoundingClientRect();\r\n        let resizeType = modalResizeType(x, y, originalRect);\r\n\r\n        if (resizeType === null) {\r\n            return;\r\n        }\r\n\r\n        const originalWidth = $modal.clientWidth;\r\n        const originalHeight = $modal.clientHeight;\r\n        const originalMinWidth = normalizeSizeFromProps($modal.style.minWidth ?? '');\r\n        const originalMinHeight = normalizeSizeFromProps($modal.style.minHeight ?? '')\r\n        let width = originalWidth;\r\n        let height = originalHeight;\r\n        let top = originalRect.top;\r\n        let left = originalRect.left;\r\n\r\n        document.body.style.userSelect = \"none\";\r\n        // s####i love u!\r\n        document.body.style.setProperty('-webkit-user-select', 'none');\r\n\r\n        document.addEventListener('pointermove', (e: PointerEvent) => {\r\n            if (resizeType === null) {\r\n                return;\r\n            }\r\n            if (resizeType === 'left') {\r\n                left = originalRect.left + (e.clientX - x);\r\n                width = originalWidth - (e.clientX - x);\r\n            }\r\n            if (resizeType === 'right') {\r\n                width = originalWidth + (e.clientX - x);\r\n            }\r\n            if (resizeType === 'top') {\r\n                height = originalHeight - (e.clientY - y);\r\n                if (height > originalMinHeight) {\r\n                    top = originalRect.top + (e.clientY - y);\r\n                }\r\n            }\r\n            if (resizeType === 'bottom') {\r\n                height = originalHeight + (e.clientY - y);\r\n            }\r\n            if (resizeType == 'top-left') {\r\n                width = originalWidth - (e.clientX - x);\r\n                if (width > originalMinWidth) {\r\n                    left = originalRect.left + (e.clientX - x);\r\n                }\r\n\r\n                height = originalHeight - (e.clientY - y);\r\n                if (height > originalMinHeight) {\r\n                    top = originalRect.top + (e.clientY - y);\r\n                }\r\n            }\r\n            if (resizeType == 'top-right') {\r\n                width = originalWidth + (e.clientX - x);\r\n                if (width > originalMinWidth) {\r\n                    top = originalRect.top + (e.clientY - y);\r\n                    height = originalHeight - (e.clientY - y);\r\n                }\r\n            }\r\n            if (resizeType == 'bottom-left') {\r\n                width = originalWidth - (e.clientX - x);\r\n                height = originalHeight + (e.clientY - y);\r\n                if (width > originalMinWidth) {\r\n                    left = originalRect.left + (e.clientX - x);\r\n                }\r\n            }\r\n            if (resizeType == 'bottom-right') {\r\n                width = originalWidth + (e.clientX - x);\r\n                height = originalHeight + (e.clientY - y);\r\n            }\r\n\r\n            $modal.style.width = width + 'px';\r\n            $modal.style.left = left + 'px';\r\n\r\n            if (e.clientY >= 0) {\r\n                $modal.style.height = height + 'px';\r\n                $modal.style.top = top + 'px';\r\n            }\r\n\r\n            options.resize({\r\n                x: $modal.getBoundingClientRect().x,\r\n                y: $modal.getBoundingClientRect().y,\r\n                width: $modal.clientWidth,\r\n                height: $modal.clientHeight\r\n            });\r\n        });\r\n\r\n        document.addEventListener('pointerup', () => {\r\n            resizeType = null;\r\n            document.body.style.userSelect = \"none\";\r\n            // s####i love u!\r\n            document.body.style.setProperty('-webkit-user-select', '');\r\n        })\r\n    });\r\n}\r\n","import {MoveModalOptions} from \"../Types/MoveModalOptions\";\r\n\r\nexport default ($modal: HTMLElement, options: MoveModalOptions): void => {\r\n    const $header = $modal.querySelector('.modal-header');\r\n    $header?.addEventListener('pointerdown', (e: PointerEvent): void => {\r\n        const x = e.clientX - $modal.getBoundingClientRect().left;\r\n        const y = e.clientY - $modal.getBoundingClientRect().top;\r\n\r\n        const move = function (e: PointerEvent) {\r\n            let _y = (e.clientY - y);\r\n            if (_y < 0) {\r\n                _y = 0;\r\n            }\r\n            $modal.style.top = _y + 'px';\r\n            $modal.style.left = (e.clientX - x) + 'px';\r\n            document.body.style.userSelect = \"none\";\r\n            // s####i love u!\r\n            document.body.style.setProperty('-webkit-user-select', 'none');\r\n\r\n            options.move({\r\n                x: $modal.getBoundingClientRect().x,\r\n                y: $modal.getBoundingClientRect().y,\r\n                width: $modal.clientWidth,\r\n                height: $modal.clientHeight\r\n            })\r\n        }\r\n\r\n        document.addEventListener('pointermove', move);\r\n\r\n        document.addEventListener('pointerup', () => {\r\n            document.removeEventListener('pointermove', move);\r\n            document.body.style.userSelect = \"\";\r\n            // s####i love u!\r\n            document.body.style.setProperty('-webkit-user-select', '');\r\n        }, {\r\n            once: true\r\n        });\r\n    });\r\n}\r\n","import { ModalPosition } from \"../Types/ModalPosition\";\r\n\r\nexport default ($modal: HTMLElement, modalPosition: ModalPosition): void => {\r\n    $modal.style.width = modalPosition.width + 'px';\r\n    $modal.style.height = modalPosition.height + 'px';\r\n    $modal.style.top = modalPosition.y !== null ? modalPosition.y + 'px' : (document.documentElement.clientHeight / 2 - $modal.clientHeight / 2) + 'px';\r\n    $modal.style.left = modalPosition.x !== null ? modalPosition.x + 'px' : (document.documentElement.clientWidth / 2 - $modal.clientWidth / 2) + 'px';\r\n}\r\n","<script lang=\"ts\" setup>\r\nimport { onMounted, onUnmounted, ref } from \"vue\";\r\n\r\nconst $backdrop = ref(null);\r\nconst emit = defineEmits(['close']);\r\n\r\nconst updateBackdropSize = (): void => {\r\n  $backdrop.value.style.width = document.documentElement.clientWidth + 'px';\r\n  $backdrop.value.style.height = document.documentElement.clientHeight + 'px';\r\n}\r\n\r\nconst onCloseBackdrop = (): void => {\r\n  emit('close');\r\n}\r\n\r\nonMounted((): void => {\r\n  updateBackdropSize();\r\n\r\n  window.addEventListener('resize', updateBackdropSize);\r\n});\r\n\r\nonUnmounted((): void => {\r\n  window.removeEventListener('resize', updateBackdropSize);\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div ref=\"$backdrop\" @click=\"onCloseBackdrop\" class=\"backdrop\"></div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n.backdrop {\r\n  position: fixed;\r\n  z-index: 900;\r\n  top: 0;\r\n  left: 0;\r\n  background: #000;\r\n  opacity: .5;\r\n}\r\n.v-enter-active,\r\n.v-leave-active {\r\n  transition: opacity 0.5s ease;\r\n}\r\n\r\n.v-enter-from,\r\n.v-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>\r\n","<script lang=\"ts\" setup>\r\nconst emit = defineEmits(['close']);\r\n\r\nconst onCloseButtonClick = () => {\r\n  emit('close');\r\n};\r\n</script>\r\n\r\n<template>\r\n  <button type=\"button\" @click.prevent=\"onCloseButtonClick\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-x\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n      <path d=\"M18 6l-12 12\"></path>\r\n      <path d=\"M6 6l12 12\"></path>\r\n    </svg>\r\n  </button>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\nbutton {\r\n  svg {\r\n    color: #b2b2b2;\r\n    &:hover {\r\n      color: #949494;\r\n    }\r\n    &:active {\r\n      color: #707070;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<script lang=\"ts\" setup>\r\nimport { onMounted, onUnmounted, ref, nextTick } from \"vue\";\r\nimport {addModal, deleteModal, getModals} from \"../utils/ModalStorage.js\";\r\nimport resizeModal from \"../events/resizeModal\";\r\nimport moveModal from \"../events/moveModal\";\r\nimport updateModalSizeAndPosition from \"../utils/updateModalSizeAndPosition\";\r\nimport { ModalPosition } from \"../Types/ModalPosition\";\r\n\r\nimport ModalBackdrop from \"./ModalBackdrop.vue\";\r\nimport ModalCloseButton from \"./ModalCloseButton.vue\";\r\nimport {getMaxZIndexOfModals, getStartupModalPosition, normalizeSizeFromProps, getScrollbarWidth} from \"../utils/modal-utils\";\r\n\r\nconst modalIsOpened = ref(false);\r\nconst modalIsVisible = ref(false);\r\nconst modalIsActive = ref(false);\r\n\r\nconst props = defineProps({\r\n  name: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  title: {\r\n    type: String,\r\n    required: false,\r\n    default: null\r\n  },\r\n  minWidth: {\r\n    type: String,\r\n    default: '200px',\r\n  },\r\n  width: {\r\n    type: String,\r\n    default: '600px'\r\n  },\r\n  minHeight: {\r\n    type: String,\r\n    default: '200px',\r\n  },\r\n  height: {\r\n    type: String,\r\n    default: '400px'\r\n  },\r\n  backdrop: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  staticBackdrop: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  resize: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  theme: {\r\n    type: String,\r\n    default: 'white'\r\n  }\r\n});\r\n\r\nconst $modal = ref<HTMLElement | null>(null);\r\nconst $headerWrapper = ref<HTMLElement | null>(null);\r\nconst $header = ref<HTMLElement | null>(null);\r\nlet modalPosition: ModalPosition;\r\n\r\nconst open = (): void => {\r\n  modalPosition = modalPosition || getStartupModalPosition(\r\n      normalizeSizeFromProps(props.width),\r\n      normalizeSizeFromProps(props.height),\r\n  );\r\n\r\n  const scrollbarWith = getScrollbarWidth();\r\n  if (scrollbarWith > 0) {\r\n    document.body.style.paddingRight = scrollbarWith + 'px';\r\n  }\r\n  document.body.style.overflow = 'hidden';\r\n\r\n  modalIsOpened.value = true;\r\n  setTimeout(() => modalIsVisible.value = true, 10);\r\n\r\n  nextTick(async () => {\r\n    if ($modal.value === null || $headerWrapper.value === null) {\r\n      return;\r\n    }\r\n\r\n    activate();\r\n\r\n    $modal.value.style.zIndex = (getMaxZIndexOfModals() + 1).toString();\r\n    $modal.value.style.minWidth = props.minWidth;\r\n    $modal.value.style.minHeight = props.minHeight;\r\n\r\n    updateModalSizeAndPosition($modal.value, modalPosition);\r\n    if (props.resize) {\r\n      resizeModal($modal.value, {\r\n        resize: (position: ModalPosition): void => {\r\n          modalPosition = position;\r\n        },\r\n      });\r\n    }\r\n\r\n    moveModal($modal.value, {\r\n      move: (position: ModalPosition) => {\r\n        modalPosition = position;\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst getZIndex = (): number => {\r\n  return Number($modal.value?.style.zIndex ?? 1000);\r\n}\r\n\r\nconst activate = (): void => {\r\n  if ($modal.value === null || modalIsActive.value === true) {\r\n    return;\r\n  }\r\n  for (const anotherModal of getModals().values()) {\r\n    anotherModal.deactivate();\r\n  }\r\n  let zIndex = getMaxZIndexOfModals() + 1;\r\n  modalIsActive.value = true;\r\n  $modal.value.style.zIndex = zIndex.toString();\r\n}\r\n\r\nconst deactivate = (): void => {\r\n  modalIsActive.value = false;\r\n  if ($modal.value !== null) {\r\n    let zIndex = Number($modal.value.style.zIndex) - 1;\r\n    if (zIndex < 1000) {\r\n      zIndex = 1000;\r\n    }\r\n    $modal.value.style.setProperty('z-index', zIndex.toString());\r\n  }\r\n}\r\n\r\nconst close = (): void => {\r\n  modalIsVisible.value = false;\r\n  document.body.style.paddingRight = '';\r\n  document.body.style.overflow = '';\r\n  setTimeout(() => {\r\n    modalIsOpened.value = false;\r\n  }, 150);\r\n}\r\n\r\nconst onCloseBackdrop = () => {\r\n  if (!props.staticBackdrop) {\r\n    close();\r\n  }\r\n}\r\n\r\nonMounted(():void => {\r\n  addModal(props.name, {\r\n    open,\r\n    close,\r\n    activate,\r\n    deactivate,\r\n    getZIndex,\r\n  });\r\n});\r\n\r\nonUnmounted((): void => {\r\n  deleteModal(props.name);\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div @pointerdown=\"activate\" ref=\"$modal\" class=\"modal\" :class=\"{'modal--hidden': !modalIsOpened, 'modal-visible': modalIsVisible, 'modal--theme-black': props.theme === 'black'}\">\r\n      <div ref=\"$headerWrapper\" class=\"modal-header-wrapper\">\r\n        <div ref=\"$header\" class=\"modal-header\">\r\n          <div class=\"modal-header__title\">\r\n            {{ title }}\r\n          </div>\r\n          <div class=\"modal-header__buttons\">\r\n            <ModalCloseButton\r\n              @close=\"close\"\r\n            ></ModalCloseButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <slot></slot>\r\n    </div>\r\n\r\n    <Transition>\r\n      <modal-backdrop v-if=\"props.backdrop && modalIsOpened\" @close=\"onCloseBackdrop\"></modal-backdrop>\r\n    </Transition>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n.modal--hidden {\r\n  display: none !important;\r\n}\r\n\r\n.modal-visible {\r\n  opacity: 1 !important;\r\n}\r\n\r\n.modal {\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: sans-serif;\r\n  position: fixed;\r\n  background: #fff;\r\n  border-radius: 11px;\r\n  border: 1px solid rgba(30, 29, 29, 0.16);\r\n  box-shadow: 0 0 25px 0 rgba(0,0,0,0.20);\r\n  overflow: hidden;\r\n  opacity: 0;\r\n  transition: opacity .15s ease-in-out 0s;\r\n\r\n  .modal-header-wrapper {\r\n    background: #f3f4f6;\r\n    padding: .3rem .5rem;\r\n    .modal-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      user-select: none;\r\n\r\n      .modal-header__buttons {\r\n        line-height: 0;\r\n        button {\r\n          line-height: 0;\r\n          background: transparent;\r\n          border: none;\r\n          padding: 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &.modal--theme-black {\r\n    background: #292a2e;\r\n    color: #d0d0dc;\r\n    .modal-header-wrapper {\r\n      background: #25262b;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<script lang=\"ts\" setup>\r\nimport { ref, onMounted } from \"vue\";\r\n\r\nconst $footerNode = ref<HTMLElement|null>(null);\r\nlet showFooter = true;\r\n\r\nonMounted((): void => {\r\n    showFooter = $footerNode.value !== null && $footerNode.value.querySelectorAll('button').length > 0;\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div ref=\"$footerNode\" class=\"modal-footer\" v-if=\"showFooter\">\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n.modal-footer {\r\n  text-align: right;\r\n  padding: .5rem;\r\n  background: #f3f4f6;\r\n}\r\n\r\n.modal.modal--theme-black {\r\n  .modal-footer {\r\n    background: #25262b;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"modal-body\">\r\n    <div class=\"modal-body__content\">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.modal-body {\r\n  padding: .7rem;\r\n  width: 100%;\r\n  flex-grow: 1;\r\n  box-sizing: border-box;\r\n  overflow-y: hidden;\r\n  .modal-body__content {\r\n    height: 100%;\r\n    overflow-y: auto;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <button type=\"button\">\r\n    <slot></slot>\r\n  </button>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\nbutton {\r\n  background: #fff;\r\n  border: 1px solid #e5e8ec;\r\n  padding: .3rem 1rem;\r\n  border-radius: 5px;\r\n  outline: none;\r\n  user-select: none;\r\n  margin-left: .5rem;\r\n  &:hover {\r\n    background: #f6f6f8;\r\n    border: 1px solid #e2e6ea;\r\n  }\r\n  &:active {\r\n    background: #e8eaec;\r\n    border: 1px solid #cbd1d9;\r\n  }\r\n}\r\n.modal.modal--theme-black {\r\n  .modal-footer {\r\n    button {\r\n      background: #48484f;\r\n      border-color: #48484f;\r\n      color: #d0d0dc;\r\n      &:hover {\r\n        background: #575760;\r\n        border-color: #575760;\r\n      }\r\n      &:active {\r\n        background: #4f4f57;\r\n        border-color: #4f4f57;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import Modal from \"./Components/Modal.vue\";\r\nimport ModalFooter from \"./Components/ModalFooter.vue\";\r\nimport ModalContent from \"./Components/ModalContent.vue\";\r\nimport ModalButton from \"./Components/ModalButton.vue\";\r\nimport { getModal } from \"./utils/ModalStorage\";\r\n\r\nconst open = (modalName: string): void => {\r\n    getModal(modalName)?.open();\r\n}\r\n\r\nconst close = (modalName: string): void => {\r\n    getModal(modalName)?.close();\r\n}\r\n\r\nexport {\r\n    Modal,\r\n    ModalContent,\r\n    ModalFooter,\r\n    ModalButton,\r\n    open,\r\n    close\r\n}"],"names":["modals","addModal","name","options","getModal","deleteModal","getModals","modalResizeType","mouseX","mouseY","rect","modalCursor","calculateX","width","calculateY","height","y","normalizeSizeFromProps","size","getStartupModalPosition","getMaxZIndexOfModals","zIndex","modalOption","zIndexOfCurrentModal","getScrollbarWidth","resizeModal","$modal","e","x","originalRect","resizeType","originalWidth","originalHeight","originalMinWidth","originalMinHeight","top","left","moveModal","$header","move","_y","updateModalSizeAndPosition","modalPosition","$backdrop","ref","emit","__emit","updateBackdropSize","onCloseBackdrop","onMounted","onUnmounted","onCloseButtonClick","modalIsOpened","modalIsVisible","modalIsActive","props","__props","$headerWrapper","open","scrollbarWith","nextTick","activate","position","getZIndex","_a","anotherModal","deactivate","close","$footerNode","showFooter","_hoisted_1","_sfc_render","_ctx","_cache","_openBlock","_createElementBlock","_hoisted_2","modalName"],"mappings":"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"}